import{_ as e,o as a,c as o,O as t}from"./chunks/framework.51846e02.js";const b=JSON.parse('{"title":"生命周期","description":"","frontmatter":{},"headers":[],"relativePath":"knowledge/Vue/Vue2/lifecycle-hooks.md","filePath":"knowledge/Vue/Vue2/lifecycle-hooks.md"}'),d={name:"knowledge/Vue/Vue2/lifecycle-hooks.md"},r=t('<h1 id="生命周期" tabindex="-1">生命周期 <a class="header-anchor" href="#生命周期" aria-label="Permalink to &quot;生命周期&quot;">​</a></h1><p><code>beforeMount</code>、<code>mounted</code>、<code>beforeUpdate</code>、<code>updated</code>、<code>beforeUnmount</code>、<code>unmounted</code>、<code>activated</code>、<code>deactivated</code> 钩子在服务器端渲染期间不会被调用</p><h2 id="beforecreate" tabindex="-1">beforeCreate <a class="header-anchor" href="#beforecreate" aria-label="Permalink to &quot;beforeCreate&quot;">​</a></h2><p>在组件实例初始化完成之后立即调用</p><p>会在实例初始化完成、props 解析之后、<code>data()</code> 和 <code>computed</code> 等选项处理之前立即调用</p><h2 id="created" tabindex="-1">created <a class="header-anchor" href="#created" aria-label="Permalink to &quot;created&quot;">​</a></h2><p>在组件实例处理完所有与状态相关的选项后调用</p><p>当这个钩子被调用时，以下内容已经设置完成：响应式数据、计算属性、方法和侦听器。然而，此时挂载阶段还未开始，因此 <code>$el</code> 属性仍不可用。</p><h2 id="beforemount" tabindex="-1">beforeMount <a class="header-anchor" href="#beforemount" aria-label="Permalink to &quot;beforeMount&quot;">​</a></h2><p>在组件被挂载之前调用</p><p>当这个钩子被调用时，组件已经完成了其响应式状态的设置，但还没有创建 DOM 节点。它即将首次执行 DOM 渲染过程。</p><h2 id="mounted" tabindex="-1">mounted <a class="header-anchor" href="#mounted" aria-label="Permalink to &quot;mounted&quot;">​</a></h2><p>在组件被挂载之后调用</p><h2 id="beforeupdate" tabindex="-1">beforeUpdate <a class="header-anchor" href="#beforeupdate" aria-label="Permalink to &quot;beforeUpdate&quot;">​</a></h2><p>在组件即将因为一个响应式状态变更而更新其 DOM 树之前调用</p><h2 id="updated" tabindex="-1">updated <a class="header-anchor" href="#updated" aria-label="Permalink to &quot;updated&quot;">​</a></h2><p>在组件因为一个响应式状态变更而更新其 DOM 树之后调用</p><h2 id="beforeunmount" tabindex="-1">beforeUnmount <a class="header-anchor" href="#beforeunmount" aria-label="Permalink to &quot;beforeUnmount&quot;">​</a></h2><p>在一个组件实例被卸载之前调用</p><h2 id="unmounted" tabindex="-1">unmounted <a class="header-anchor" href="#unmounted" aria-label="Permalink to &quot;unmounted&quot;">​</a></h2><p>在一个组件实例被卸载之后调用</p><h2 id="activated" tabindex="-1">activated <a class="header-anchor" href="#activated" aria-label="Permalink to &quot;activated&quot;">​</a></h2><p>若组件实例是 <code>&lt;KeepAlive&gt;</code> 缓存树的一部分，当组件被插入到 DOM 中时调用</p><h2 id="deactivated" tabindex="-1">deactivated <a class="header-anchor" href="#deactivated" aria-label="Permalink to &quot;deactivated&quot;">​</a></h2><p>若组件实例是 <code>&lt;KeepAlive&gt;</code> 缓存树的一部分，当组件从 DOM 中被移除时调用。</p>',25),c=[r];function n(i,l,u,h,p,s){return a(),o("div",null,c)}const m=e(d,[["render",n]]);export{b as __pageData,m as default};
