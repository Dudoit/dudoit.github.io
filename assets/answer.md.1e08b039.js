import{_ as s,o as a,c as n,O as l}from"./chunks/framework.51846e02.js";const C=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"answer.md","filePath":"answer.md"}'),p={name:"answer.md"},o=l(`<h2 id="_1" tabindex="-1">1. <a class="header-anchor" href="#_1" aria-label="Permalink to &quot;1.&quot;">​</a></h2><p>string number boolean undefined symbol bigInt</p><p>object</p><h2 id="_2" tabindex="-1">2. <a class="header-anchor" href="#_2" aria-label="Permalink to &quot;2.&quot;">​</a></h2><p>typeof 判断基本类型，因为引用类型都会显示object</p><p>instanceof 原型</p><p>toString.</p><h3 id="_3" tabindex="-1">3. <a class="header-anchor" href="#_3" aria-label="Permalink to &quot;3.&quot;">​</a></h3><p>可以访问自由变量的函数，自由变量指的是外部作用域中的变量</p><p>作用：保护变量，变量私有化，延长变量的生命周期</p><p>用途：防抖、节流、Vue2的响应式原理</p><p>缺点：可能会导致内存泄露</p><p>怎么处理：在变量不使用时，给变量赋值为null</p><h3 id="_4" tabindex="-1">4. <a class="header-anchor" href="#_4" aria-label="Permalink to &quot;4.&quot;">​</a></h3><p>对象的原型：每个对象上都有一个 <code>[[prototype]]</code>，可以通过 <code>__proto__</code> 或者 <code>Object.getPrototypeOf()</code> 获取</p><p>从哪来的？</p><p>函数的原型：函数上有内置属性 <code>prototype</code>，可以通过 <code>Function.prototype</code> 获取，使用 new 创建对象实例时，会将 Function.prototype 赋值给对象的 <code>[[prototype]]</code>，函数上还有一个 <code>Function.prptotype.constructor</code> 指向函数本身</p><p>原型链：在对象上获取属性，若没有获取到则向上查询，顶层是 Object</p><h3 id="_5" tabindex="-1">5. <a class="header-anchor" href="#_5" aria-label="Permalink to &quot;5.&quot;">​</a></h3><p>this 是执行上下文，通常在函数中使用，this 指向调用者。在全局使用时，this 指向window。</p><p>隐式绑定：绑定调用者</p><p>显式绑定：call apply bind</p><p>call(this, ...args) 剩余参数</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">Function.prototype.mycall = function (thisBings, ...args) {</span></span>
<span class="line"><span style="color:#A6ACCD;">  thisBings = thisBings ? Object(thisBings) : &#39;&#39;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span></span>
<span class="line"><span style="color:#A6ACCD;">}</span></span></code></pre></div><p>apply(this, []) 数组</p><p>bind() 创建一个新的函数，可以重复调用</p><p>箭头函数中的 this 指向父级作用域</p><p>settimetout 执行window</p><h3 id="new" tabindex="-1">new <a class="header-anchor" href="#new" aria-label="Permalink to &quot;new&quot;">​</a></h3><p>创建一个空对象 将创建的函数的prototype 赋值给<code>[[]]</code> 返回引用地址</p><h3 id="_7" tabindex="-1">7. <a class="header-anchor" href="#_7" aria-label="Permalink to &quot;7.&quot;">​</a></h3><p>原型链继承</p><p>父类的对象赋值给子类原型链</p><p>缺点：不能传递参数、引用类型，使用混乱</p><p>借用构造函数继承</p><p>call(this)</p><p>解决了传递参数的问题，方法不能访问</p><p>组合继承</p><p>缺点：调用了两次</p><p>原型式继承</p><p>创建对象的方法，用 Object.create 创建</p><p>缺点：和原型链一样</p><p>寄生式继承</p><p>可以传更多的参数</p><p>缺点：和原型链一样</p><p>寄生组合式继承</p><p>ES6继承</p><p>extends super()</p><h3 id="_8" tabindex="-1">8. <a class="header-anchor" href="#_8" aria-label="Permalink to &quot;8.&quot;">​</a></h3><p>事件循环，由于JavaScript是单线程的，所以为了不阻塞执行</p><p>区分了同步任务和异步任务</p><p>异步任务又分为宏任务和微任务</p><p>宏任务 setTimeout</p><p>微任务 promise que</p><p>promise 的 then方法才是微任务 Promise 因为会立即执行所以不是微任务</p><p>宏任务执行前要先清空微任务队列</p><h3 id="_9" tabindex="-1">9. <a class="header-anchor" href="#_9" aria-label="Permalink to &quot;9.&quot;">​</a></h3><p>在不刷新网页的情况下更新内容</p><p>局部更新</p><p>常用来进行网络请求，XHR XML HTTP Request</p><p>xhr.open</p><p>xhr.send</p><p>xhr.onreadyStateChange</p><p>0 未开始 1 open 2 send 3 接收中 4 完成</p><h3 id="_10" tabindex="-1">10 <a class="header-anchor" href="#_10" aria-label="Permalink to &quot;10&quot;">​</a></h3><h3 id="_11" tabindex="-1">11 <a class="header-anchor" href="#_11" aria-label="Permalink to &quot;11&quot;">​</a></h3><p>var 可以重复定义 变量提升 函数作用域</p><p>let const 块级作用域 不能重复定义 暂时性死区</p><p>const 需要赋值且不能修改</p><h3 id="_12" tabindex="-1">12 <a class="header-anchor" href="#_12" aria-label="Permalink to &quot;12&quot;">​</a></h3><p>没有this 不能用显式绑定更改</p><h3 id="_13" tabindex="-1">13 <a class="header-anchor" href="#_13" aria-label="Permalink to &quot;13&quot;">​</a></h3><p>处理异步编程的一种方式，用来解决回调地狱的问题</p><p>三种状态：pending fulfilled rejected</p><p>三种对象方法：then catch finlly</p><p>六种类方法：resolve reject all allsettld race any</p><p>all 全部成功</p><p>allsettld 全部执行 无论成功</p><p>race 最快的</p><p>any 最快的成功的</p><p>优点：可以将异步操作以同步操作的流程表达出来，避免了层层嵌套的回调函数；Promise 对象提供统一的接口，使得控制异步操作更加容易、规范</p><p>缺点：无法取消 Promise；如果不设置回调函数，Promise 内部抛出的错误，不会反应到外部；当处于 Pending 状态时，无法得知目前进展到哪一个阶段</p><h3 id="_14" tabindex="-1">14. <a class="header-anchor" href="#_14" aria-label="Permalink to &quot;14.&quot;">​</a></h3><p>catch可以链式调用</p><p>then中是一个参数</p><h3 id="_15" tabindex="-1">15 <a class="header-anchor" href="#_15" aria-label="Permalink to &quot;15&quot;">​</a></h3><p>promise 语法糖</p><p>async 可以单独使用，作用和promise一样</p><h3 id="_16" tabindex="-1">16 <a class="header-anchor" href="#_16" aria-label="Permalink to &quot;16&quot;">​</a></h3><p>this</p><p>class 是代理没有this function 可以绑定this</p><p>constructor</p><p>function 的constructor 指向函数本身 class 中的 constructor 是一个属性</p><p>function 可以重复定义 class 不行</p><p>class不能枚举 function可以枚举</p><h3 id="_17" tabindex="-1">17 <a class="header-anchor" href="#_17" aria-label="Permalink to &quot;17&quot;">​</a></h3><div class="language-JavaScript"><button title="Copy Code" class="copy"></button><span class="lang">JavaScript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">Function</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">prototype</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">mycall</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">function</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">thisBings</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">...</span><span style="color:#A6ACCD;font-style:italic;">args</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">thisBings</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">thisBings</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">?</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">Object</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">thisBings</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">window</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">thisBings</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">fn</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">this</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">result</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">thisBings</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">fn</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">...</span><span style="color:#A6ACCD;">args</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">delete</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">thisBings</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">fn</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">result</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><h3 id="_17-1" tabindex="-1">17 <a class="header-anchor" href="#_17-1" aria-label="Permalink to &quot;17&quot;">​</a></h3><div class="language-JavaScript"><button title="Copy Code" class="copy"></button><span class="lang">JavaScript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">Function</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">prototype</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">myapply</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">function</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">thisBings</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">args</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">thisBings</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">thisBings</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">?</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">Object</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">thisBings</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">window</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">thisBings</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">fn</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">this</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#F07178;"> (</span><span style="color:#89DDFF;">!</span><span style="color:#A6ACCD;">args</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">thisBings</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">fn</span><span style="color:#F07178;">()</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;font-style:italic;">else</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">var</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">result</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">thisBings</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">fn</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">...</span><span style="color:#A6ACCD;">args</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">delete</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">thisBings</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">fn</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">result</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><h3 id="_18" tabindex="-1">18 <a class="header-anchor" href="#_18" aria-label="Permalink to &quot;18&quot;">​</a></h3><div class="language-JavaScript"><button title="Copy Code" class="copy"></button><span class="lang">JavaScript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">Function</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">prototype</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">myapply</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">function</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">thisBings</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">bindArgs</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">thisBings</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">thisBings</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">?</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">Object</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">thisBings</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">window</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">thisBings</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">fn</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">this</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">function</span><span style="color:#89DDFF;">(...</span><span style="color:#A6ACCD;font-style:italic;">newArgs</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">args</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> [</span><span style="color:#89DDFF;">...</span><span style="color:#A6ACCD;">bindArgs</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">...</span><span style="color:#A6ACCD;">newArgs</span><span style="color:#F07178;">]</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">thisBings</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">fn</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">...</span><span style="color:#A6ACCD;">args</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><h3 id="_19" tabindex="-1">19 <a class="header-anchor" href="#_19" aria-label="Permalink to &quot;19&quot;">​</a></h3><div class="language-JavaScript"><button title="Copy Code" class="copy"></button><span class="lang">JavaScript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">debonce</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">fn</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">delay</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">let</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">timer</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">null</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">function</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">_debonce</span><span style="color:#89DDFF;">(...</span><span style="color:#A6ACCD;font-style:italic;">args</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#F07178;"> (</span><span style="color:#A6ACCD;">timer</span><span style="color:#F07178;">) </span><span style="color:#82AAFF;">clearTimeout</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">timer</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#A6ACCD;">timer</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">setTimeout</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">()</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#A6ACCD;">fn</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">call</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">this,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">args</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#89DDFF;">},</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">delay</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">_debonce</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><h3 id="" tabindex="-1"><a class="header-anchor" href="#" aria-label="Permalink to &quot;&quot;">​</a></h3><div class="language-JavaScript"><button title="Copy Code" class="copy"></button><span class="lang">JavaScript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">throttle</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">fn</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">wait</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">option</span><span style="color:#89DDFF;">={</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">leading</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FF9CAC;">true</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">trailling</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FF9CAC;">false</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">})</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">let</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">previous</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">0</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">let</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">time</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">null</span></span>
<span class="line"><span style="color:#F07178;">  </span></span>
<span class="line"></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">function</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">_throttle</span><span style="color:#89DDFF;">(...</span><span style="color:#A6ACCD;font-style:italic;">args</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">nowTime</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">+new</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">Date</span><span style="color:#F07178;">()</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// if (!previous &amp;&amp; )</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#F07178;"> (</span><span style="color:#A6ACCD;">nowTime</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">-</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">previous</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&gt;</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">wait</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#F07178;"> (</span><span style="color:#A6ACCD;">timer</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#82AAFF;">clearTimeout</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">timer</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#A6ACCD;">timer</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">null</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#A6ACCD;">fn</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">apply</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">this,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">args</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#A6ACCD;">previous</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">nowTime</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#89DDFF;font-style:italic;">return</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F07178;">    </span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">_throttle</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><h3 id="_22-深拷贝" tabindex="-1">22. 深拷贝 <a class="header-anchor" href="#_22-深拷贝" aria-label="Permalink to &quot;22. 深拷贝&quot;">​</a></h3><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">isObject</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">value</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">valueType</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">typeof</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">value</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> (</span><span style="color:#A6ACCD;">value</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">!==</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">null</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">&amp;&amp;</span><span style="color:#F07178;"> (</span><span style="color:#A6ACCD;">valueType</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">===</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">object</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">||</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">valueType</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">===</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">function</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">deepClone</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">originValue</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#F07178;"> (</span><span style="color:#89DDFF;">!</span><span style="color:#82AAFF;">isObject</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">originValue</span><span style="color:#F07178;">)) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">originValue</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">cloneObject</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">Array</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">isArray</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">originValue</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">?</span><span style="color:#F07178;"> [] </span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{}</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">for</span><span style="color:#F07178;"> (</span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">key</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">in</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">originValue</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">cloneObject</span><span style="color:#F07178;">[</span><span style="color:#A6ACCD;">key</span><span style="color:#F07178;">] </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">deepClone</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">originValue</span><span style="color:#F07178;">[</span><span style="color:#A6ACCD;">key</span><span style="color:#F07178;">])</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">cloneObject</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><h3 id="_23-promise-all" tabindex="-1">23. Promise.all <a class="header-anchor" href="#_23-promise-all" aria-label="Permalink to &quot;23. Promise.all&quot;">​</a></h3><h2 id="css" tabindex="-1">CSS <a class="header-anchor" href="#css" aria-label="Permalink to &quot;CSS&quot;">​</a></h2><h3 id="_1-1" tabindex="-1">1. <a class="header-anchor" href="#_1-1" aria-label="Permalink to &quot;1.&quot;">​</a></h3><p>!important &gt; 内联 &gt; id &gt; class &gt; 标签 &gt; 通配符选择器</p><h3 id="_2-1" tabindex="-1">2. <a class="header-anchor" href="#_2-1" aria-label="Permalink to &quot;2.&quot;">​</a></h3><p>根本区别在于有没有创建新的节点</p><p>伪类：用户行为 hover active focus</p><p>伪元素：::before ::after</p><h3 id="_3-1" tabindex="-1">3. <a class="header-anchor" href="#_3-1" aria-label="Permalink to &quot;3.&quot;">​</a></h3><p>重排是指元素的大小、位置、显式隐藏发生改变</p><p>重绘是指。。颜色，背景，透明度发生改变</p><p>重排一定重绘，重绘不一定重排</p><p>重拍的情况：添加、删除DOM节点 移动DOM节点 调整窗口大小</p><p>解决：用class集中修改样式，减少table布局，绝对定位</p><h3 id="_4-1" tabindex="-1">4. <a class="header-anchor" href="#_4-1" aria-label="Permalink to &quot;4.&quot;">​</a></h3><p>background/border z-index&lt;0 block float inline-block z-index=0 z-index&gt;0</p><h3 id="_5-1" tabindex="-1">5. <a class="header-anchor" href="#_5-1" aria-label="Permalink to &quot;5.&quot;">​</a></h3><p>标准 width = content + padding + maring + border 怪异 width = (content + padding + border) + margin box-size border-box content-box</p><h3 id="_6" tabindex="-1">6. <a class="header-anchor" href="#_6" aria-label="Permalink to &quot;6.&quot;">​</a></h3><p>relative 相对 原点在元素左上角，受top、left影响</p><p>absolute 绝对 相对与最近的父元素且position不为static 脱离文档流 不占位置</p><p>fixed 固定 相对于窗口 脱离文档流 不占位置</p><p>sticky 粘性 超出阈值为固定未超出为相对，top/left...只能有一个值</p><p>static 默认</p><h3 id="_7-1" tabindex="-1">7. <a class="header-anchor" href="#_7-1" aria-label="Permalink to &quot;7.&quot;">​</a></h3><p>宽度已知</p><p>宽度未知 transform</p><p>relative</p><p>absolute top 50% left 50%</p><h3 id="_8-1" tabindex="-1">8. <a class="header-anchor" href="#_8-1" aria-label="Permalink to &quot;8.&quot;">​</a></h3><p>块级格式化上下文，BFC内层元素不会受外层影响</p><p>触发条件：float不为none display:flex inline-block table-cell</p><p>overflow：hidden html根元素</p><p>作用：解决父元素塌陷，清除浮动，margin重叠</p><h3 id="_9-1" tabindex="-1">9. <a class="header-anchor" href="#_9-1" aria-label="Permalink to &quot;9.&quot;">​</a></h3><p>创建BFC</p><p>clearfix</p><h3 id="_10-1" tabindex="-1">10. <a class="header-anchor" href="#_10-1" aria-label="Permalink to &quot;10.&quot;">​</a></h3><h3 id="_11-1" tabindex="-1">11. <a class="header-anchor" href="#_11-1" aria-label="Permalink to &quot;11.&quot;">​</a></h3><p>display: none visible: none opicty: 0 高度0 缩小比例0 绝对定位移出 hidden=true</p><h3 id="_12-1" tabindex="-1">12. <a class="header-anchor" href="#_12-1" aria-label="Permalink to &quot;12.&quot;">​</a></h3><p>vw</p><p>width: 100% hight: 0 padding-bottom: -10px</p><h3 id="_13-1" tabindex="-1">13 <a class="header-anchor" href="#_13-1" aria-label="Permalink to &quot;13&quot;">​</a></h3><p>border</p><p>width: 50px height: 50px border: 10px slider tanslate border-top: pink</p>`,153),e=[o];function t(c,r,y,F,i,D){return a(),n("div",null,e)}const h=s(p,[["render",t]]);export{C as __pageData,h as default};
