import{_ as e,o as a,c as r,O as t}from"./chunks/framework.a3f41f98.js";const S=JSON.parse('{"title":"浏览器基础知识","description":"","frontmatter":{},"headers":[],"relativePath":"develop/Browser+Network/Browser/index.md","filePath":"develop/Browser+Network/Browser/index.md"}'),o={name:"develop/Browser+Network/Browser/index.md"},i=t('<h1 id="浏览器基础知识" tabindex="-1">浏览器基础知识 <a class="header-anchor" href="#浏览器基础知识" aria-label="Permalink to &quot;浏览器基础知识&quot;">​</a></h1><h2 id="浏览器内核" tabindex="-1">浏览器内核 <a class="header-anchor" href="#浏览器内核" aria-label="Permalink to &quot;浏览器内核&quot;">​</a></h2><p>浏览器内核可以分成两部分：渲染引擎 和 JS 引擎。早期渲染引擎和 JS 引擎并没有十分明确的区分，但随着 JS 引擎越来越独立，内核也成了渲染引擎的代称。渲染引擎又包括了 HTML 解释器、CSS 解释器、布局、网络、存储、图形、音视频、图片解码器等等零部件。</p><p>Trident：IE 浏览器</p><p>EdgeHTML：Edge 浏览器，用于替代旧版 Trident</p><p>Gecko：Firefox 浏览器</p><p>WebKit：Safari 浏览器</p><p>Blink：Chrome 浏览器、Opera 浏览器；基于 WebKit 分支而开发的内核</p><h2 id="js-引擎" tabindex="-1">JS 引擎 <a class="header-anchor" href="#js-引擎" aria-label="Permalink to &quot;JS 引擎&quot;">​</a></h2><p>由于 CPU 只认识自己的指令集，所以高级的编程语言最终都要转成机器指令执行</p><p>JavaScript 引擎的作用就是：将 JavaScript 代码翻译为 CPU 指令执行</p><div class="info custom-block"><p class="custom-block-title">浏览器内核 和 JavaScript 引擎的关系</p><p>浏览器内核是整个浏览器的核心组件，通常分为两部分。一部分负责 HTML 解析、布局、渲染等内容；而 JavaScript 引擎则是浏览器内核中负责解析和执行 JavaScript 代码的部分。</p></div><h2 id="v8-引擎" tabindex="-1">V8 引擎 <a class="header-anchor" href="#v8-引擎" aria-label="Permalink to &quot;V8 引擎&quot;">​</a></h2><p>AST expiorer 是一个根据词/语法分析生成抽象语法树结构的网站</p><p>V8 引擎中的一些模块：</p><ul><li><p><a href="https://v8.dev/blog/scanner" target="_blank" rel="noreferrer">Parse</a>：用于将 JavaScript 代码转换为 AST 抽象语法树</p></li><li><p><a href="https://v8.dev/blog/ignition-interpreter" target="_blank" rel="noreferrer">Ignition</a>：解释器，用于将 AST 转换为 ByteCode 字节码</p></li><li><p><a href="https://v8.dev/blog/turbofan-jit" target="_blank" rel="noreferrer">TurboFan</a>：编译器，将字节码编译为 CPU 可以执行的机器码</p></li></ul>',16),p=[i];function n(l,s,d,c,h,_){return a(),r("div",null,p)}const v=e(o,[["render",n]]);export{S as __pageData,v as default};
